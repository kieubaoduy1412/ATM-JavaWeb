package dnb.atm.dao.impl;
import java.net.ConnectException;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.dao.DataAccessException;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import com.mysql.jdbc.log.Log;

import dnb.atm.dao.LoginDao;
import dnb.atm.dao.mapper.AccountMapper;
import dnb.atm.model.CustomerModel;
import dnb.atm.utils.Constants;

@Component
@Repository
public class LoginDaoImpl implements LoginDao {
	@Autowired
	private JdbcTemplate jdbcTemplate;
	@Value("${dnb.gcs.sql.getInfToLogin}")
	private String getInfFromAccountTbl;
	private Logger LOG = Logger.getLogger(LoginDaoImpl.class);
	/**
	 * Check if user exits in database and return view page
	 * @param: username
	 *             String
	 * @param: pass
	 *             String
	 * @return String
	 * @author duybk.sp
	 **/
	public CustomerModel login(String username, String pass){
		CustomerModel obj = new CustomerModel();
		try {
			obj = this.jdbcTemplate.queryForObject(this.getInfFromAccountTbl, new Object[] { username, pass }, AccountMapper.getAccount());
		} catch (EmptyResultDataAccessException e) {
			obj.setMessage(Constants.WRONG_USER);
			LOG.error(e.getMessage(),e);
		} catch (DataAccessException e){
			obj.setMessage(Constants.TIME_OUT);
			LOG.error(e.getMessage(),e);
		}
		return obj;
	}

}
