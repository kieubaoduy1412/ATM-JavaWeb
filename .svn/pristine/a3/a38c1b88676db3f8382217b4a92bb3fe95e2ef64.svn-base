package dnb.atm.controller;


import java.net.ConnectException;

import javax.servlet.http.HttpSession;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.ui.ModelMap;

import dnb.atm.model.CustomerModel;
import dnb.atm.service.LoginService;
import junit.framework.Assert;

/***
 * 
 * @author phuctd.lt
 *
 */

@RunWith(MockitoJUnitRunner.class)
public class LoginControllerTest {
	@InjectMocks
	private LoginController loginController = new LoginController();
	@Mock
	private LoginService loginService;
	@Mock
	private HttpSession session;
	@Before
	public void setUp() throws Exception{
		MockitoAnnotations.initMocks(this);
	}
	@Test
	public void loginTest1() throws ConnectException {
		String username = "0107744763";
		String pass = "123456";
		CustomerModel customerModel = new CustomerModel();
		customerModel.setAccountID("0107744763");
		Mockito.when(loginService.login(username, pass)).thenReturn(customerModel);
		Assert.assertEquals("welcome", loginController.login(username, pass, session, new ModelMap()));
	}
	
	@Test
	public void loginTest2() throws ConnectException{
		String user = "";
		String pass = "";
		CustomerModel customerModel = new CustomerModel();
		customerModel.setAccountID("");
		Mockito.when(loginService.login(user, pass)).thenReturn(customerModel);
		Assert.assertEquals("welcome", loginController.login(user, pass, session, new ModelMap()));
		
	}
	
	@Test
	public void loginTest3() throws ConnectException{
		String user = "123456";
		String pass = "123";
		Mockito.when(loginService.login(user, pass)).thenReturn(new CustomerModel());
		Assert.assertEquals(new CustomerModel(), loginController.login(user, pass, session, new ModelMap()));
	}
	
	@Test
	public void loginTest4() throws ConnectException{
		String user = "";
		String pass = "";
		Mockito.when(loginService.login(user, pass)).thenReturn(new CustomerModel());
		Assert.assertEquals(new CustomerModel(), loginController.login(user, pass, session, new ModelMap()));
	}
	/*@Test
	public void sumTest(){
		int a =1;
		int b =2;
		Mockito.when(loginService.check(a, b)).thenReturn(false);
		//Assert.assertTrue(loginService.check(a, b));
		Assert.assertEquals(-1, loginController.sum(a, b));
	}*/

}
