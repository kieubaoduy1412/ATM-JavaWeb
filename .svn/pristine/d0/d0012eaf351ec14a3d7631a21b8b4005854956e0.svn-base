package dnb.atm.controller;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import dnb.atm.service.WelcomeService;
import dnb.atm.utils.Constants;

@Controller
public class WelcomeController {

	@Autowired
	private WelcomeService welcomeService;

	/**
	 * get Money
	 * 
	 * @param amount
	 *            String
	 * @param session
	 *            HttpSession
	 * @return String
	 * @author duybk.sp
	 **/
	@RequestMapping(Constants.GET_MONEY)
	public String getMoney(@RequestParam("amount") final int amount, HttpSession session) {
		int result = welcomeService.getMoney(session.getAttribute(Constants.SESSION_ACOUNT_ID).toString(), amount);
		if (result == 1) {
			return Constants.SUCCESS;
		} else if (result == 0) {
			return Constants.ERROR;
		}
		return Constants.ERROR;
	}

	/**
	 * sendMoney
	 * 
	 * @param receiverId
	 *            String
	 * @param amount
	 *            int
	 * @return String
	 * @author lochl.cz
	 **/
	@RequestMapping(Constants.SEND_MONEY)
	public String sendMoney(@RequestParam("receiverId") String receiverId, @RequestParam("amount") int amount,
			HttpSession session, ModelMap modelmap) {
		String message = Constants.SYSTEM_FAIL;
		String page = Constants.SEND_MONEY_PAGE;
		int result = -1; // default is fail
		if (session.getAttribute(Constants.SESSION_ACOUNT_ID) != null) {
			result = welcomeService.sendMoney(session.getAttribute(Constants.SESSION_ACOUNT_ID).toString(), amount,
					receiverId);
			if (result == 2) {
				message = Constants.SUCCESS;
				modelmap.addAttribute(Constants.RECEIVER_ID, receiverId);
				modelmap.addAttribute(Constants.AMOUNT, amount);
				page = Constants.SUCCESS;
			} else if (result == 1) {
				message = Constants.NOT_ENOUGH_MONEY;
			} else if (result == 0) {
				message = Constants.NOT_FOUND_RECEIVER;
			}
		}
		modelmap.addAttribute(Constants.MESSAGE, message);
		return page;
	}

	/**
	 * This action return to the Add money page
	 * 
	 * @return String
	 * @author tamvn.ax
	 */
	@RequestMapping(Constants.LINK_ADD_MONEY_PAGE)
	public String gotoAddMoneyScreen() {
		return Constants.ADD_MONEY_PAGE;
	}

	/**
	 * This action perform add money to account of user
	 * 
	 * 
	 * @param accountId
	 * @param amount
	 * @return String
	 * @author tamvn.ax
	 */
	@RequestMapping(Constants.ADD_MONEY)
	public String addMoney(@RequestParam("accountId") final String accountId, @RequestParam("amount") final int amount,
			ModelMap model) {

		int result = welcomeService.addMoney(accountId, amount);
		switch (result) {
		case 0:
			model.addAttribute(Constants.MESSAGE, "Add money to " + accountId + "failed !");
			return Constants.ADD_MONEY_PAGE;
		case 1:
			model.addAttribute(Constants.MESSAGE, "You have add success " + amount + " to " + accountId);
			return Constants.SUCCESS;
		default:
			model.addAttribute(Constants.MESSAGE, " Account " + accountId + "is not exist");
			return Constants.SUCCESS;
		}

	}

	/**
	 * gotoSendMoney
	 * 
	 * @return String
	 * @author lochl.cz
	 **/
	@RequestMapping("/gotoSendMoney")
	public String gotoSendMoney() {
		return "sendMoney";
	}

	/**
	 * gotoWelcomeScreen
	 * 
	 * @return String
	 * @author duybk.sp
	 **/
	@RequestMapping(Constants.LINK_GET_MONEY_PAGE)
	public String gotoGetMoneyScreen() {
		return Constants.GET_MONEY_PAGE;
	}

	/**
	 * gotoWelcomeScreen
	 * 
	 * @return String
	 * @author lochl.cz
	 **/
	@RequestMapping("/gotoWelcomePage")
	public String gotoWelcomeScreen() {
		return "welcome";
	}

	/**
	 * cancelAction
	 * 
	 * @return String
	 * @author lochl.cz
	 **/
	@RequestMapping("/cancelAction")
	public String cancelAction(HttpSession session) {
		session.removeAttribute("SESSION_ACID");
		return "../../index";
	}
}
